version: '3.8'

services:

  springboot-microservice-management:
    build:
      context: ./springboot-microservice-management
    image: springboot-microservice-management-img
    container_name: springboot-microservice-management-api
    ports:
      - "8091:8080"
    networks:
      - mysqlnetwork

  springboot-microservice-management-ap1:
    build:
      context: ./springboot-microservice-management
    image: springboot-microservice-management-ap1-img
    container_name: springboot-microservice-management-ap1-api
    ports:
      - "8010:8080"
    networks:
      - mysqlnetwork

  springboot-microservice-management-ap2:
    build:
      context: ./springboot-microservice-management
    image: springboot-microservice-management-ap2-img
    container_name: springboot-microservice-management-ap2-api
    ports:
      - "8011:8080"
    networks:
      - mysqlnetwork

####################
  springboot-microservice-transactions:
    build:
      context: ./springboot-microservice-transactions
    image: springboot-microservice-transactions-img
    container_name: springboot-microservice-transactions-api
    ports:
      - "8092:8080"
    networks:
      - mysqlnetwork

  springboot-microservice-transactions-ap1:
    build:
      context: ./springboot-microservice-transactions
    image: springboot-microservice-transactions-ap1-img
    container_name: springboot-microservice-transactions-ap1-api
    ports:
      - "8012:8080"
    networks:
      - mysqlnetwork

  springboot-microservice-transactions-ap2:
    build:
      context: ./springboot-microservice-transactions
    image: springboot-microservice-transactions-ap2-img
    container_name: springboot-microservice-transactions-ap2-api
    ports:
      - "8013:8080"
    networks:
      - mysqlnetwork

####################
  springboot-microservice-billing:
    build:
      context: ./springboot-microservice-billing
    image: springboot-microservice-billing-img
    container_name: springboot-microservice-billing-api
    ports:
      - "8093:8080"
    networks:
      - mysqlnetwork

  springboot-microservice-billing-ap1:
    build:
      context: ./springboot-microservice-billing
    image: springboot-microservice-billing-ap1-img
    container_name: springboot-microservice-billing-ap1-api
    ports:
      - "8014:8080"
    networks:
      - mysqlnetwork

  springboot-microservice-billing-ap2:
    build:
      context: ./springboot-microservice-billing
    image: springboot-microservice-billing-ap2-img
    container_name: springboot-microservice-billing-ap2-api
    ports:
      - "8015:8080"
    networks:
      - mysqlnetwork

####################
  springboot-microservice-dispute:
    build:
      context: ./springboot-microservice-dispute
    image: springboot-microservice-dispute-img
    container_name: springboot-microservice-dispute-api
    ports:
      - "8094:8080"
    networks:
      - mysqlnetwork

  springboot-microservice-dispute-ap1:
    build:
      context: ./springboot-microservice-dispute
    image: springboot-microservice-dispute-ap1-img
    container_name: springboot-microservice-dispute-ap1-api
    ports:
      - "8016:8080"
    networks:
      - mysqlnetwork

  springboot-microservice-dispute-ap2:
    build:
      context: ./springboot-microservice-dispute
    image: springboot-microservice-dispute-ap2-img
    container_name: springboot-microservice-dispute-ap2-api
    ports:
      - "8017:8080"
    networks:
      - mysqlnetwork

####################
networks:
  mysqlnetwork:
    external: true  # 使用外部已存在的網路